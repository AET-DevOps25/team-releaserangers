name: Setup the AWS environment

on:
  workflow_dispatch:
    inputs:
      aws_access_key_id:
        description: "AWS Access Key ID"
        required: true
        type: string
      aws_secret_access_key:
        description: "AWS Secret Access Key"
        required: true
        type: string
      aws_session_token:
        description: "AWS Session Token"
        required: true
        type: string
      terraform_state:
        description: "Terraform state file content (optional, base64 encoded)"
        required: false
        type: string

jobs:
  setup_aws:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ github.event.inputs.aws_access_key_id }}
          aws-secret-access-key: ${{ github.event.inputs.aws_secret_access_key }}
          aws-session-token: ${{ github.event.inputs.aws_session_token }}
          aws-region: us-east-1

      - name: Set up Terraform variables
        run: |
          cd terraform
          cat > terraform.tfvars <<EOF
          ssh_private_key = <<-EOT
          ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          EOT
          ssh_public_key = <<-EOT
          ${{ secrets.AWS_EC2_PUBLIC_KEY }}
          EOT
          EOF

      - name: Restore Terraform state (if provided)
        if: ${{ github.event.inputs.terraform_state != '' }}
        run: |
          cd terraform
          echo "${{ github.event.inputs.terraform_state }}" | base64 -d > terraform.tfstate

      - name: Run Terraform to set up AWS environment
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve

      - name: Wait for the AWS environment to be ready
        run: sleep 120

      - name: Output Terraform state for future use
        run: |
          cd terraform
          echo "::notice title=Terraform State::To reuse this infrastructure, copy the following base64-encoded state:"
          echo "::notice::$(base64 -w 0 terraform.tfstate)"
