import { test, expect } from "@playwright/test"

test.beforeEach(async ({ page }, testInfo) => {
  // Listen for all console events and handle errors
  page.on("console", (msg) => {
    if (msg.type() === "error") console.log(`Error text: "${msg.text()}"`)
  })
})

test("test_account_creation_password_match", async ({ page }) => {
  await page.goto("/")
  await expect(page.getByRole("button", { name: "Login" })).toBeVisible()
  await page.getByRole("button", { name: "Sign up" }).click()
  await expect(page.getByRole("button", { name: "Create Account" })).toBeVisible()
  await page.getByRole("textbox", { name: "Full Name" }).click()
  await page.getByRole("textbox", { name: "Full Name" }).fill("John Doe")
  await page.getByRole("textbox", { name: "Full Name" }).press("Tab")
  await page.getByRole("textbox", { name: "Email" }).fill("email@email.com")
  await page.getByRole("textbox", { name: "Password", exact: true }).click()
  await page.getByRole("textbox", { name: "Password", exact: true }).fill("password")
  await page.getByRole("textbox", { name: "Confirm Password" }).click()
  await page.getByRole("textbox", { name: "Confirm Password" }).fill("password1")
  await page.getByRole("button", { name: "Create Account" }).click()
  await expect(page.getByText("Passwords do not match")).toBeVisible()
})

test("test_account_creation", async ({ page }) => {
  await page.goto("/")
  await page.getByRole("button", { name: "Sign up" }).click()
  await page.getByRole("textbox", { name: "Full Name" }).click()
  await page.getByRole("textbox", { name: "Full Name" }).fill("John Doe")
  await page.getByRole("textbox", { name: "Full Name" }).press("Tab")
  await page.getByRole("textbox", { name: "Email" }).fill("my@email.com")
  await page.getByRole("textbox", { name: "Email" }).press("Tab")
  await page.getByRole("textbox", { name: "Password", exact: true }).fill("password")
  await page.getByRole("textbox", { name: "Password", exact: true }).press("Tab")
  await page.getByRole("textbox", { name: "Confirm Password" }).fill("password")
  await page.getByRole("button", { name: "Create Account" }).click()
  await expect(page.locator("h1")).toContainText("John Doe! ðŸ‘‹")
  await expect(page.getByRole("main")).toContainText("0")
  await expect(page.locator("body")).toContainText("No favorites yet.")
  await expect(page.getByRole("listitem").filter({ hasText: "New Course" }).getByRole("button")).toBeVisible()
  await page.getByRole("button", { name: "ReleaseRangers" }).click()
  await page.getByRole("menuitem", { name: "Logout" }).click()
  await expect(page.getByRole("button", { name: "Login" })).toBeVisible()
})

test("test_course_creation_and_management", async ({ page }) => {
  await page.goto("/")
  await page.getByRole("button", { name: "Login" }).click()
  await page.getByRole("textbox", { name: "Email" }).click()
  await page.getByRole("textbox", { name: "Email" }).fill("my@email.com")
  await page.getByRole("textbox", { name: "Email" }).press("Tab")
  await page.getByRole("textbox", { name: "Password" }).fill("password")
  await page.getByRole("button", { name: "Continue" }).click()
  await expect(page.locator("h1")).toContainText("John Doe! ðŸ‘‹")
  await page.getByRole("listitem").filter({ hasText: "New Course" }).getByRole("button").click()
  await page.getByRole("button", { name: "ðŸ“–" }).click()
  await page.getByRole("searchbox", { name: "Searchâ€¦" }).fill("test")
  await page.getByRole("gridcell", { name: "Test tube" }).click()
  await page.getByRole("textbox", { name: "Course Title" }).click()
  await page.getByRole("textbox", { name: "Course Title" }).fill("Course 1")
  await page.getByRole("textbox", { name: "Course Title" }).press("Tab")
  await page.getByRole("textbox", { name: "Description" }).fill("This is a description.")
  await page.getByRole("button", { name: "Create Course" }).click()
  await expect(page.locator("h1")).toContainText("Course 1")
  await page.getByRole("main").getByText("ðŸ§ª").click()
  await expect(page.locator("h1")).toContainText("ðŸ§ª")
  await expect(page.getByRole("main")).toContainText("This is a description.")
  await expect(page.getByRole("heading", { name: "This course has no content yet" })).toBeVisible()
  await expect(page.getByRole("link", { name: "ðŸ§ª Course" })).toBeVisible()
  await page.getByTestId("nav-actions-course-button").click()
  await page.getByRole("button", { name: "Customize Course" }).click()
  await page.getByRole("textbox", { name: "e.g., Introduction to Machine" }).click()
  await page.getByRole("textbox", { name: "e.g., Introduction to Machine" }).fill("New Course 1")
  await page.getByRole("textbox", { name: "Description" }).click()
  await page.getByRole("textbox", { name: "Description" }).fill("This is a new description.")
  await page.getByRole("button", { name: "ðŸ§ª" }).click()
  await page.getByRole("searchbox", { name: "Searchâ€¦" }).fill("test")
  await page.getByRole("gridcell", { name: "Placard" }).click()
  await page.getByRole("button", { name: "Save Changes" }).click()
  await expect(page.locator("h1")).toContainText("New Course 1")
  await expect(page.locator("h1")).toContainText("ðŸª§")
  await expect(page.getByRole("main")).toContainText("This is a new description.")

  await page.getByRole("button", { name: "Customize Course" }).click()
  await page.getByRole("textbox", { name: "e.g., Introduction to Machine" }).click()
  await page.getByRole("textbox", { name: "e.g., Introduction to Machine" }).fill("New Course")
  await page.getByRole("textbox", { name: "Description" }).click()
  await page.getByRole("textbox", { name: "Description" }).fill("This is a description.")
  await page.getByRole("button", { name: "ðŸª§" }).click()
  await page.getByRole("searchbox", { name: "Searchâ€¦" }).fill("test")
  await page.getByRole("gridcell", { name: "Test tube" }).click()
  await page.getByRole("button", { name: "Save Changes" }).click()
})

test("test_mark_course_as_favorite", async ({ page }) => {
  await page.goto("/")
  await page.getByRole("button", { name: "Login" }).click()
  await page.getByRole("textbox", { name: "Email" }).click()
  await page.getByRole("textbox", { name: "Email" }).fill("my@email.com")
  await page.getByRole("textbox", { name: "Password" }).click()
  await page.getByRole("textbox", { name: "Password" }).fill("password")
  await page.getByRole("button", { name: "Continue" }).click()
  await expect(page.locator("body")).toContainText("No favorites yet.")
  await page.getByRole("link", { name: "ðŸ§ª New Course" }).click()
  await expect(page.getByRole("main").getByRole("heading", { name: "New Course" })).toBeVisible()
  // await expect(page.getByRole("button").filter({ hasText: /^$/ }).nth(2)).toBeVisible()
  // await expect(page.getByRole("button").filter({ hasText: /^$/ }).nth(2).locator("svg")).toBeVisible()
  // await expect(page.getByRole("button").filter({ hasText: /^$/ }).nth(2).locator("svg")).toHaveAttribute("fill", "none")
  await expect(page.getByRole("main").getByRole("button").nth(1)).toBeVisible()
  await expect(page.getByRole("main").getByRole("button").nth(1).locator("svg")).toBeVisible()
  await expect(page.getByRole("main").getByRole("button").nth(1).locator("svg")).toHaveAttribute("fill", "none")

  await page.getByRole("main").getByRole("button").nth(1).click()

  await expect(page.getByRole("main").getByRole("button").nth(1)).toBeVisible()
  await expect(page.getByRole("main").getByRole("button").nth(1).locator("svg")).toBeVisible()
  await expect(page.getByRole("main").getByRole("button").nth(1).locator("svg")).toHaveAttribute("fill", "var(--color-yellow-500)")

  await expect(page.locator("body")).not.toContainText("No favorites yet.")
  await page.getByRole("button", { name: "More" }).click()
  await page.getByText("Remove from Favorites").click()
  await expect(page.getByRole("main").getByRole("button").nth(2)).toBeVisible()
  await expect(page.getByRole("main").getByRole("button").nth(2).locator("svg")).toBeVisible()
  await expect(page.getByRole("main").getByRole("button").nth(2).locator("svg")).toHaveAttribute("fill", "none")
  await expect(page.locator("body")).toContainText("No favorites yet.")
})

test("test_course_deletion", async ({ page }) => {
  await page.goto("/")
  await page.getByRole("button", { name: "Login" }).click()
  await page.getByRole("textbox", { name: "Email" }).click()
  await page.getByRole("textbox", { name: "Email" }).fill("my@email.com")
  await page.getByRole("textbox", { name: "Password" }).click()
  await page.getByRole("textbox", { name: "Password" }).fill("password")
  await page.getByRole("button", { name: "Continue" }).click()
  await page.getByRole("link", { name: "ðŸ§ª New Course" }).click()
  await page.getByTestId("nav-actions-course-button").click()
  await page.getByRole("button", { name: "Delete Course" }).click()
  await page.getByRole("textbox", { name: "Type New Course to confirm:" }).fill("Test")
  await expect(page.getByRole("button", { name: "Delete Course" })).toBeDisabled()
  await page.getByRole("textbox", { name: "Type New Course to confirm:" }).fill("New Course")
  await page.getByRole("button", { name: "Delete Course" }).click()
  await expect(page.getByRole("main")).toContainText("0")
  await expect(page.getByRole("listitem").filter({ hasText: "New Course" }).getByRole("button")).toBeVisible()
})

test("test_changing_name_and_email", async ({ page }) => {
  await page.goto("/")
  await page.getByRole("button", { name: "Login" }).click()
  await page.getByRole("textbox", { name: "Email" }).click()
  await page.getByRole("textbox", { name: "Email" }).fill("my@email.com")
  await page.getByRole("textbox", { name: "Password" }).click()
  await page.getByRole("textbox", { name: "Password" }).fill("password")
  await page.getByRole("button", { name: "Continue" }).click()
  await page.getByRole("button", { name: "Settings" }).click()
  await page.getByRole("tab", { name: "Account" }).click()
  await page.getByRole("textbox", { name: "Name" }).click()
  await page.getByRole("textbox", { name: "Name" }).fill("John Doeh")
  await page.getByRole("textbox", { name: "Email" }).click()
  await page.getByRole("textbox", { name: "Email" }).fill("my@email.net")
  await page.getByRole("button", { name: "Update Profile" }).click()
  await page.getByRole("button", { name: "Close" }).click()
  await expect(page.locator("h1")).toContainText("John Doeh! ðŸ‘‹")
  await page.getByRole("button", { name: "ReleaseRangers" }).click()
  await page.getByRole("menuitem", { name: "Logout" }).click()
  await page.getByRole("button", { name: "Login" }).click()
  await page.getByRole("textbox", { name: "Email" }).click()
  await page.getByRole("textbox", { name: "Email" }).fill("my@email.com")
  await page.getByRole("textbox", { name: "Password" }).click()
  await page.getByRole("textbox", { name: "Password" }).fill("password")
  await page.getByRole("button", { name: "Continue" }).click()
  await expect(page.getByText("Login failed. Please try")).toBeVisible()
  await page.getByRole("textbox", { name: "Email" }).click()
  await page.getByRole("textbox", { name: "Email" }).fill("my@email.net")
  await page.getByRole("button", { name: "Continue" }).click()
  await page.getByRole("button", { name: "Settings" }).click()
  await page.getByRole("tab", { name: "Account" }).click()
  await page.getByRole("textbox", { name: "Name" }).click()
  await page.getByRole("textbox", { name: "Name" }).fill("John Doe")
  await page.getByRole("textbox", { name: "Email" }).click()
  await page.getByRole("textbox", { name: "Email" }).fill("my@email.com")
  await page.getByRole("button", { name: "Update Profile" }).click()
})

test("test_changing_password", async ({ page }) => {
  await page.goto("/")
  await page.getByRole("button", { name: "Login" }).click()
  await page.getByRole("textbox", { name: "Email" }).click()
  await page.getByRole("textbox", { name: "Email" }).fill("my@email.com")
  await page.getByRole("textbox", { name: "Password" }).click()
  await page.getByRole("textbox", { name: "Password" }).fill("password")
  await page.getByRole("button", { name: "Continue" }).click()
  await page.getByRole("button", { name: "Settings" }).click()
  await page.getByRole("tab", { name: "Account" }).click()
  await page.getByRole("textbox", { name: "New Password", exact: true }).click()
  await page.getByRole("textbox", { name: "New Password", exact: true }).fill("123")
  await page.getByRole("textbox", { name: "Confirm New Password" }).click()
  await page.getByRole("textbox", { name: "Confirm New Password" }).fill("123")
  await page.getByRole("button", { name: "Change Password" }).click()
  await expect(page.getByLabel("Account")).toContainText("Password must be at least 8 characters long")
  await page.getByRole("textbox", { name: "New Password", exact: true }).click()
  await page.getByRole("textbox", { name: "New Password", exact: true }).fill("12345678")
  await page.getByRole("textbox", { name: "Confirm New Password" }).click()
  await page.getByRole("textbox", { name: "Confirm New Password" }).fill("12345678")
  await page.getByRole("button", { name: "Change Password" }).click()
  await page.getByRole("button", { name: "Close" }).click()
  await page.getByRole("listitem").filter({ hasText: "ReleaseRangers" }).click()
  await page.getByRole("menuitem", { name: "Logout" }).click()
  await page.getByRole("button", { name: "Login" }).click()
  await page.getByRole("textbox", { name: "Email" }).click()
  await page.getByRole("textbox", { name: "Email" }).fill("my@email.com")
  await page.getByRole("textbox", { name: "Password" }).click()
  await page.getByRole("textbox", { name: "Password" }).fill("password")
  await page.getByRole("button", { name: "Continue" }).click()
  await expect(page.getByText("Login failed. Please try")).toBeVisible()
  await page.getByRole("textbox", { name: "Password" }).click()
  await page.getByRole("textbox", { name: "Password" }).fill("12345678")
  await page.getByRole("button", { name: "Continue" }).click()
  await expect(page.locator("h1")).toContainText("John Doe! ðŸ‘‹")
  await page.getByRole("button", { name: "Settings" }).click()
  await page.getByRole("tab", { name: "Account" }).click()
  await page.getByRole("textbox", { name: "New Password", exact: true }).click()
  await page.getByRole("textbox", { name: "New Password", exact: true }).fill("password")
  await page.getByRole("textbox", { name: "Confirm New Password" }).click()
  await page.getByRole("textbox", { name: "Confirm New Password" }).fill("password")
  await page.getByRole("button", { name: "Change Password" }).click()
})

test("test_account_deletion", async ({ page }) => {
  await page.goto("/")
  await page.getByRole("button", { name: "Login" }).click()
  await page.getByRole("textbox", { name: "Email" }).click()
  await page.getByRole("textbox", { name: "Email" }).fill("my@email.com")
  await page.getByRole("textbox", { name: "Password" }).click()
  await page.getByRole("textbox", { name: "Password" }).fill("password")
  await page.getByRole("button", { name: "Continue" }).click()
  await page.getByRole("button", { name: "Settings" }).click()
  await page.getByRole("tab", { name: "Account" }).click()
  await page.getByRole("button", { name: "Delete Account" }).click()
  await page.getByRole("button", { name: "Delete Account" }).click()
  await page.getByRole("button", { name: "Login" }).click()
  await page.getByRole("textbox", { name: "Email" }).click()
  await page.getByRole("textbox", { name: "Email" }).fill("my@email.com")
  await page.getByRole("textbox", { name: "Password" }).click()
  await page.getByRole("textbox", { name: "Password" }).fill("password")
  await page.getByRole("button", { name: "Continue" }).click()
  await expect(page.getByText("Login failed. Please try")).toBeVisible()
})
